exports.ids = ["views-ErrorBoundary-ErrorBoundary-test"];
exports.modules = {

/***/ "./shared/views/ErrorBoundary/ErrorBoundary.test.js":
/*!**********************************************************!*\
  !*** ./shared/views/ErrorBoundary/ErrorBoundary.test.js ***!
  \**********************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var enzyme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! enzyme */ \"enzyme\");\n/* harmony import */ var enzyme__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(enzyme__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ErrorBoundaryComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ErrorBoundaryComponent */ \"./shared/views/ErrorBoundary/ErrorBoundaryComponent.tsx\");\n\n\n\n\nfunction ChildWithError() {\n  throw Error('Intentional error');\n} // There are console error and log messages which are typically useful, but can be suppressed\n// because we intentionally introduced an error.\n\n\nfunction swallowConsoleError(codeToRun) {\n  // Copy console.error and console.log implementation in temporary variables\n  const {\n    error,\n    log\n  } = console; // Assign console.error and console.log to empty arrow functions.\n  // eslint-disable-next-line no-console\n\n  console.error = () => {}; // eslint-disable-next-line no-console\n\n\n  console.log = () => {}; // Run the code that shows console error and log messages\n\n\n  codeToRun(); // Reimplement the orginal console.error and console.log implementation\n  // eslint-disable-next-line no-console\n\n  console.error = error; // eslint-disable-next-line no-console\n\n  console.log = log;\n}\n\ndescribe('\"Error boundary\" component', () => {\n  it('Renders correctly', () => {\n    const wrapper = Object(enzyme__WEBPACK_IMPORTED_MODULE_0__[\"shallow\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ErrorBoundaryComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null));\n    expect(wrapper).toMatchSnapshot();\n  });\n  test('Shows the correct error message.', () => {\n    swallowConsoleError(() => {\n      const wrapper = Object(enzyme__WEBPACK_IMPORTED_MODULE_0__[\"mount\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ErrorBoundaryComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ChildWithError, null)));\n      const text = wrapper.text();\n      expect(text).toEqual('Something went wrong. Please refresh the page, and try again.');\n      wrapper.unmount();\n    });\n  });\n  test('Shows the correct error stack.', () => {\n    swallowConsoleError(() => {\n      const spy = jest.spyOn(_ErrorBoundaryComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"].prototype, 'componentDidCatch');\n      const wrapper = Object(enzyme__WEBPACK_IMPORTED_MODULE_0__[\"mount\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_ErrorBoundaryComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ChildWithError, null)));\n      expect(spy).toHaveBeenCalled(); // prettier-ignore\n\n      expect(spy.mock.calls[0][1]).toEqual({\n        componentStack: `\n    in ChildWithError\n    in ErrorBoundaryComponent (created by WrapperComponent)\n    in WrapperComponent`\n      });\n      spy.mockClear();\n      spy.mockReset();\n      spy.mockRestore();\n      wrapper.unmount();\n    });\n  });\n});\n\n//# sourceURL=webpack:///./shared/views/ErrorBoundary/ErrorBoundary.test.js?");

/***/ })

};;